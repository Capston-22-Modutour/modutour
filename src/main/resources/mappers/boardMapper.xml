<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mappers.boardMapper">
	
	<!-- 마이페이지 내가 쓴 자유 게시글 시작 -->
	<select id="my_list" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board
		where board_writer = #{user_name}
	</select>
	<!-- 마이페이지 내가 쓴 자유 게시글 끝 -->
	
	<!-- 자유 게시판 시작 -->
	<!-- 게시물 목록 -->
	<!-- 쿼리를 실행한 뒤 결과가 있을 경우 resultType 사용 -->
	<select id="list" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="write" parameterType="com.spring.dto.BoardDTO">
		insert into member_board(board_title, board_content, board_writer)
					values(#{board_title}, #{board_content}, #{board_writer})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board
		where board_bno = #{board_bno}		
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="updateViewCnt" parameterType="int">
		update member_board
			set board_viewCnt = board_viewCnt + 1
		where board_bno = #{board_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="modify" parameterType="com.spring.dto.BoardDTO">
		update member_board
			set
				board_title = #{board_title},
				board_writer = #{board_writer},
				board_content = #{board_content}
			where board_bno = #{board_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="int">
		delete from member_board
		where board_bno = #{board_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="count" resultType="int">
		select count(board_bno) from member_board
	</select>
	
	<!-- 게시글 목록 + 페이징 -->
	<select id="listPage" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select board_bno, board_title, board_writer, board_regDate, board_viewCnt
		from member_board
		order by board_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board
		
		<if test='searchType.equals("title")'>
			where board_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			where board_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			where board_title LIKE concat('%', #{keyword}, '%')
			or board_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			where board_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		order by board_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="searchCount" parameterType="hashMap" resultType="int">
		select count(board_bno) from member_board  
	  
		<if test='searchType.equals("title")'>
		 	WHERE board_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE board_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE board_title LIKE concat('%', #{keyword}, '%') 
			 or board_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE board_writer LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
	<!-- 자유 게시판 끝 -->
	
	<!-- 여행후기 게시판 시작 -->
	<!-- 게시물 목록 -->
	<!-- 쿼리를 실행한 뒤 결과가 있을 경우 resultType 사용 -->
	<select id="review_list" resultType="com.spring.dto.BoardDTO">
		select *
		from review
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="review_write" parameterType="com.spring.dto.BoardDTO">
		insert into review(review_title, review_content, review_writer)
					values(#{review_title}, #{review_content}, #{review_writer})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="review_view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select *
		from review
		where review_bno = #{review_bno}
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="review_updateViewCnt" parameterType="int">
		update review
			set review_viewCnt = review_viewCnt + 1
		where review_bno = #{review_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="review_modify" parameterType="com.spring.dto.BoardDTO">
		update review
			set
				review_title = #{review_title},
				review_writer = #{review_writer},
				review_content = #{review_content}
			where review_bno = #{review_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="review_delete" parameterType="int">
		delete from review
		where review_bno = #{review_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="review_count" resultType="int">
		select count(review_bno) from review
	</select>
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="review_listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select *
		from review
		
		<if test='searchType.equals("title")'>
			where review_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			where review_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			where review_title LIKE concat('%', #{keyword}, '%')
			or review_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			where review_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		order by review_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="review_searchCount" parameterType="hashMap" resultType="int">
		select count(review_bno) from review
	  
		<if test='searchType.equals("title")'>
		 	WHERE review_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE review_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE review_title LIKE concat('%', #{keyword}, '%') 
			 or review_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE review_writer LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
	
	<!-- 여행후기 게시판 끝 -->
	
	<!-- 패키지 설계 게시판 시작 -->
	<!-- 게시물 목록 -->
	<select id="want_list" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board_want
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="want_write" parameterType="com.spring.dto.BoardDTO">
		insert into member_board_want(board_want_title, board_want_destination, board_want_content, board_want_writer,
									board_want_people, board_want_start, board_want_end)
					values(#{board_want_title}, #{board_want_destination}, #{board_want_content}, #{board_want_writer}, 
						#{board_want_people}, #{board_want_start}, #{board_want_end})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="want_view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select board_want_bno, board_want_title, board_want_destination, board_want_content, board_want_writer, 
			board_want_people, board_want_start, board_want_end, board_want_viewCnt, board_want_like, board_want_regDate
		from member_board_want
		where board_want_bno = #{board_want_bno}		
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="want_updateViewCnt" parameterType="int">
		update member_board_want
			set board_want_viewCnt = board_want_viewCnt + 1
		where board_want_bno = #{board_want_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="want_modify" parameterType="com.spring.dto.BoardDTO">
		update member_board_want
			set
				board_want_title = #{board_want_title},
				board_want_writer = #{board_want_writer},
				board_want_destination = #{board_want_destination},
				board_want_content = #{board_want_content},
				board_want_people = #{board_want_people},
				board_want_start = #{board_want_start},
				board_want_end = #{board_want_end}
			where board_want_bno = #{board_want_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="want_delete" parameterType="int">
		delete from member_board_want
		where board_want_bno = #{board_want_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="want_count" resultType="int">
		select count(board_want_bno) from member_board_want
	</select>
	
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="want_listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select board_want_bno, board_want_title, board_want_writer, board_want_viewCnt, board_want_like, board_want_regDate
		from member_board_want
		
		<if test='searchType.equals("title")'>
			where board_want_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			where board_want_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			where board_want_title LIKE concat('%', #{keyword}, '%')
			or board_want_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			where board_want_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		order by board_want_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="want_searchCount" parameterType="hashMap" resultType="int">
		select count(board_want_bno) from member_board_want  
	  
		<if test='searchType.equals("title")'>
		 	WHERE board_want_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE board_want_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE board_want_title LIKE concat('%', #{keyword}, '%') 
			 or board_want_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE board_want_writer LIKE concat('%', #{keyword}, '%')
		</if>
	 
	</select>
	<!-- 패키지 설계 게시판 끝 -->
	
	<!-- 패키지 제안 게시판 시작 -->
	<!-- 게시물 목록 -->
	<select id="suggest_list" resultType="com.spring.dto.BoardDTO">
		select *
		from suggest_board
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="suggest_write" parameterType="com.spring.dto.BoardDTO">
		insert into suggest_board(board_want_bno, com_regiNum, board_want_writer, suggest_writer, suggest_title, 
			board_want_destination, board_want_content, suggest_content, board_want_people, board_want_start, 
			board_want_end, suggest_price, suggest_guide, suggest_air)
					values(#{board_want_bno}, #{com_regiNum}, #{board_want_writer}, #{suggest_writer}, #{suggest_title}, 
					#{board_want_destination}, #{board_want_content}, #{suggest_content}, #{board_want_people}, 
					#{board_want_start}, #{board_want_end},	#{suggest_price}, #{suggest_guide}, #{suggest_air})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="suggest_view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select *
		from suggest_board
		where suggest_bno = #{suggest_bno}		
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="suggest_updateViewCnt" parameterType="int">
		update suggest_board
			set board_want_viewCnt = board_want_viewCnt + 1
		where board_want_bno = #{board_want_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="suggest_modify" parameterType="com.spring.dto.BoardDTO">
		update suggest_board
			set
				suggest_title = #{suggest_title},
				board_want_writer = #{board_want_writer},
				board_want_destination = #{board_want_destination},
				board_want_content = #{board_want_content},
				suggest_content = #{suggest_content},
				board_want_people = #{board_want_people},
				board_want_start = #{board_want_start},
				board_want_end = #{board_want_end},
				suggest_price = #{suggest_price},
				suggest_guide = #{suggest_guide},
				suggest_air = #{suggest_air}
			where suggest_bno = #{suggest_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="suggest_delete" parameterType="int">
		delete from suggest_board
		where suggest_bno = #{suggest_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="suggest_count" resultType="int">
		select count(suggest_bno) from suggest_board
	</select>
	
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="suggest_listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select suggest_bno, suggest_title, suggest_writer, suggest_viewCnt, suggest_like, suggest_regDate
		from suggest_board
		
		<if test='searchType.equals("title")'>
			where suggest_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			where suggest_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			where suggest_title LIKE concat('%', #{keyword}, '%')
			or suggest_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			where suggest_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		order by suggest_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="suggest_searchCount" parameterType="hashMap" resultType="int">
		select count(suggest_bno) from suggest_board  
	  
		<if test='searchType.equals("title")'>
		 	WHERE suggest_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE suggest_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE suggest_title LIKE concat('%', #{keyword}, '%') 
			 or suggest_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE suggest_writer LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
	<!-- 패키지 제안 게시판 끝 -->
</mapper>