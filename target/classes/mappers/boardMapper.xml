<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mappers.boardMapper">

	<!-- 게시글 베스트 start -->
	<!-- 리뷰 베스트 -->
	<select id="review_bestList" resultType="com.spring.dto.BoardDTO">
		select rv.review_bno, rv.review_title, rv.review_content, rv.review_writer, rv.review_like, rv.review_viewCnt , rv.review_regDate,
				iub.thumbnail as review_thumbnail
		from review rv, image_upload_board iub
		where rv.review_bno = iub.division_bno and rv.review_regDate >= DATE_ADD(NOW(),INTERVAL -1 WEEK) and rv.review_like >= 20 and classify_board = 4
		group by rv.review_bno
		order by rv.review_like desc
		limit 0,5
	</select>
	
	<!-- 패키지 설계 베스트 -->
	<select id="board_want_bestList" resultType="com.spring.dto.BoardDTO">
		select mbw.board_want_bno, mbw.board_want_title, mbw.board_want_content, mbw.board_want_writer, mbw.board_want_like, mbw.board_want_viewCnt , mbw.board_want_regDate,
				iub.thumbnail as board_want_thumbnail
		from member_board_want mbw, image_upload_board iub
		where mbw.board_want_bno = iub.division_bno and mbw.board_want_regDate >= DATE_ADD(NOW(),INTERVAL -1 WEEK) and mbw.board_want_like >= 20
		group by mbw.board_want_bno
		order by mbw.board_want_like desc
		limit 0,5
	</select>
	
	<!-- 패키지 판매 베스트 -->
	<select id="sell_bestList" resultType="com.spring.dto.BoardDTO">
		select sell_bno, sell_title, sell_content, sell_writer, sell_like, sell_viewCnt , sell_regDate,
				iub.thumbnail as sell_thumbnail
		from sell_board, image_upload_board iub
		where suggest_bno = iub.division_bno AND sell_regDate >= DATE_ADD(NOW(),INTERVAL -1 WEEK) and sell_like >= 20 AND iub.classify_board = 2
		group by sell_bno
		order by sell_like desc
		limit 0,5
	</select>
	<!-- 게시글 베스트 end -->
	
	<!-- 마이페이지 start -->
	<!-- 내가 쓴 커뮤니티 게시글 -->
	<select id="my_list" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board
		where board_writer = #{user_name}
		order by board_bno desc
	</select>
	
	<!-- 내가 쓴 여행후기 게시글 -->
	<select id="my_review_list" resultType="com.spring.dto.BoardDTO">
		select *
		from review
		where user_num = #{user_num}
		order by review_bno desc
	</select>
	
	<!-- 내가 쓴 패캐지 설계 게시글 -->
	<select id="my_package_list" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board_want
		where board_want_writer = #{user_name}
		order by board_want_bno desc
	</select>
	
	<!-- 내 구매 내역 -->
	<select id="my_pucharseList" resultType="com.spring.dto.BoardDTO">
		select *
		from order_data
		where user_num = #{user_num}
		order by order_date desc
	</select>
	<!-- 마이페이지 end -->
	
	<!-- 커뮤니티 start -->
	<!-- 커뮤니티 번호 확인 -->
	<select id="checkBoardBno" resultType="int">
		SELECT board_bno
		FROM member_board
		ORDER BY board_bno DESC
		LIMIT 1
	</select>
	
	<!-- 게시물 목록 -->
	<!-- 쿼리를 실행한 뒤 결과가 있을 경우 resultType 사용 -->
	<select id="list" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="write" parameterType="com.spring.dto.BoardDTO">
		insert into member_board(board_title, board_content, board_writer)
					values(#{board_title}, #{board_content}, #{board_writer})
	</insert>
	<!-- 이미지 삽입 -->
	<insert id="writeImage" parameterType="com.spring.dto.BoardDTO">
		insert into image_upload_board(classify_board, division_bno, img, thumbnail)
					values(0, #{division_bno}, #{img}, #{thumbnail})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board
		where board_bno = #{board_bno}
		
	</select>
	
	<!-- 이미지 조회 -->
	<select id="viewImage" resultType="com.spring.dto.BoardDTO">
		SELECT iub.classify_board, iub.img, iub.thumbnail
		FROM member_board mb, image_upload_board iub
		WHERE mb.board_bno = #{board_bno} AND iub.division_bno = #{board_bno} AND iub.classify_board = 0
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="updateViewCnt" parameterType="int">
		update member_board
			set board_viewCnt = board_viewCnt + 1
		where board_bno = #{board_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="modify" parameterType="com.spring.dto.BoardDTO">
		update member_board
			set
				board_title = #{board_title},
				board_writer = #{board_writer},
				board_content = #{board_content}
			where board_bno = #{board_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="int">
		delete from member_board
		where board_bno = #{board_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="count" resultType="int">
		select count(board_bno) from member_board
	</select>
	
	<!-- 게시글 목록 + 페이징 -->
	<select id="listPage" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select board_bno, board_title, board_writer, board_regDate, board_viewCnt
		from member_board
		order by board_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		<!-- select *
		from member_board
		
		<if test='searchType.equals("title")'>
			where board_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			where board_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			where board_title LIKE concat('%', #{keyword}, '%')
			or board_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			where board_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		order by board_bno desc
			limit #{displayPost}, #{postNum}  -->
			
		SELECT mb.*, iub.img as board_thumbnail
		FROM member_board mb, image_upload_board iub
		WHERE mb.board_bno = iub.division_bno AND classify_board = 0
		
		<if test='searchType.equals("title")'>
			and board_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			and board_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			and board_title LIKE concat('%', #{keyword}, '%')
			or board_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			and board_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		group by board_bno
		order by board_bno desc
			limit #{displayPost}, #{postNum}
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="searchCount" parameterType="hashMap" resultType="int">
		select count(board_bno) from member_board  
	  
		<if test='searchType.equals("title")'>
		 	WHERE board_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE board_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE board_title LIKE concat('%', #{keyword}, '%') 
			 or board_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE board_writer LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
	<!-- 커뮤니티 end -->
	
	<!-- 여행후기 게시판 start -->
	<!-- 커뮤니티 번호 확인 -->
	<select id="review_checkBoardBno" resultType="int">
		SELECT review_bno
		FROM review
		ORDER BY review_bno DESC
		LIMIT 1
	</select>
	
	<!-- 게시물 목록 -->
	<!-- 쿼리를 실행한 뒤 결과가 있을 경우 resultType 사용 -->
	<select id="review_list" resultType="com.spring.dto.BoardDTO">
		select *
		from review
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="review_write" parameterType="com.spring.dto.BoardDTO">
		insert into review(review_title, user_num, review_content, review_writer)
					values(#{review_title}, #{user_num}, #{review_content}, #{review_writer})
	</insert>
	<!-- 이미지 삽입 -->
	<insert id="review_writeImage" parameterType="com.spring.dto.BoardDTO">
		insert into image_upload_board(classify_board, division_bno, img, thumbnail)
					values(4, #{division_bno}, #{img}, #{thumbnail})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="review_view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select *
		from review
		where review_bno = #{review_bno}
	</select>
	<!-- 이미지 조회 -->
	<select id="review_viewImage" resultType="com.spring.dto.BoardDTO">
		SELECT iub.division_bno, iub.img, iub.thumbnail
		FROM review rv, image_upload_board iub
		WHERE rv.review_bno = #{review_bno} AND iub.division_bno = #{review_bno} AND iub.classify_board = 4
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="review_updateViewCnt" parameterType="int">
		update review
			set review_viewCnt = review_viewCnt + 1
		where review_bno = #{review_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="review_modify" parameterType="com.spring.dto.BoardDTO">
		update review
			set
				review_title = #{review_title},
				review_writer = #{review_writer},
				review_content = #{review_content}
			where review_bno = #{review_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="review_delete" parameterType="int">
		delete from review
		where review_bno = #{review_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="review_count" resultType="int">
		select count(review_bno) from review
	</select>
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="review_listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		<!-- select *
		from review
		
		<if test='searchType.equals("title")'>
			where review_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			where review_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			where review_title LIKE concat('%', #{keyword}, '%')
			or review_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			where review_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		order by review_bno desc
			limit #{displayPost}, #{postNum}  -->
			
		SELECT rv.*, iub.img as board_thumbnail
		FROM review rv, image_upload_board iub
		WHERE rv.review_bno = iub.division_bno AND classify_board = 4
		
		<if test='searchType.equals("title")'>
			and review_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			and review_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			and review_title LIKE concat('%', #{keyword}, '%')
			or review_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			and review_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		group by review_bno
		order by review_bno desc
			limit #{displayPost}, #{postNum}
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="review_searchCount" parameterType="hashMap" resultType="int">
		select count(review_bno) from review
	  
		<if test='searchType.equals("title")'>
		 	WHERE review_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE review_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE review_title LIKE concat('%', #{keyword}, '%') 
			 or review_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE review_writer LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
	
	<!-- 여행후기 게시판 end -->
	
	<!-- 패키지 설계 게시판 start -->
	<!-- 커뮤니티 번호 확인 -->
	<select id="want_checkBoardBno" resultType="int">
		SELECT board_want_bno
		FROM member_board_want
		ORDER BY board_want_bno DESC
		LIMIT 1
	</select>
	
	<!-- 게시물 목록 -->
	<select id="want_list" resultType="com.spring.dto.BoardDTO">
		select *
		from member_board_want
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="want_write" parameterType="com.spring.dto.BoardDTO">
		insert into member_board_want(board_want_title, user_num, board_want_destination, board_want_content, board_want_writer,
									board_want_people, board_want_start, board_want_end)
					values(#{board_want_title}, #{user_num}, #{board_want_destination}, #{board_want_content}, #{board_want_writer}, 
						#{board_want_people}, #{board_want_start}, #{board_want_end})
	</insert>
	<!-- 이미지 삽입 -->
	<insert id="want_writeImage" parameterType="com.spring.dto.BoardDTO">
		insert into image_upload_board(classify_board, division_bno, img, thumbnail)
					values(1, #{division_bno}, #{img}, #{thumbnail})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="want_view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select board_want_bno, board_want_title, board_want_destination, board_want_content, board_want_writer, 
			board_want_people, board_want_start, board_want_end, board_want_viewCnt, board_want_like, board_want_regDate
		from member_board_want
		where board_want_bno = #{board_want_bno}		
	</select>
	<!-- 이미지 조회 -->
	<select id="want_viewImage" resultType="com.spring.dto.BoardDTO">
		SELECT iub.division_bno, iub.img, iub.thumbnail
		FROM member_board_want mbw, image_upload_board iub
		WHERE mbw.board_want_bno = #{board_want_bno} AND iub.division_bno = #{board_want_bno} AND iub.classify_board = 1
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="want_updateViewCnt" parameterType="int">
		update member_board_want
			set board_want_viewCnt = board_want_viewCnt + 1
		where board_want_bno = #{board_want_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="want_modify" parameterType="com.spring.dto.BoardDTO">
		update member_board_want
			set
				board_want_title = #{board_want_title},
				board_want_writer = #{board_want_writer},
				board_want_destination = #{board_want_destination},
				board_want_content = #{board_want_content},
				board_want_people = #{board_want_people},
				board_want_start = #{board_want_start},
				board_want_end = #{board_want_end}
			where board_want_bno = #{board_want_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="want_delete" parameterType="int">
		delete from member_board_want
		where board_want_bno = #{board_want_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="want_count" resultType="int">
		select count(board_want_bno) from member_board_want
	</select>
	
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="want_listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select mbw.*, iub.img as board_want_thumbnail
		from member_board_want mbw, image_upload_board iub
		where mbw.board_want_bno = iub.division_bno AND classify_board = 1
		
		<if test='searchType.equals("title")'>
			AND mbw.board_want_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			AND mbw.board_want_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			AND mbw.board_want_title LIKE concat('%', #{keyword}, '%')
			or mbw.board_want_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			AND mbw.board_want_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		group by mbw.board_want_bno
		order by mbw.board_want_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="want_searchCount" parameterType="hashMap" resultType="int">
		select count(board_want_bno) from member_board_want  
	  
		<if test='searchType.equals("title")'>
		 	WHERE board_want_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE board_want_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE board_want_title LIKE concat('%', #{keyword}, '%') 
			 or board_want_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE board_want_writer LIKE concat('%', #{keyword}, '%')
		</if>
	 
	</select>
	<!-- 패키지 설계 게시판 end -->
	
	<!-- 패키지 제안 게시판 start -->
	<!-- 커뮤니티 번호 확인 -->
	<select id="suggest_checkBoardBno" resultType="int">
		SELECT suggest_bno
		FROM suggest_board
		ORDER BY suggest_bno DESC
		LIMIT 1
	</select>
	
	<!-- 게시물 목록 -->
	<select id="suggest_list" resultType="com.spring.dto.BoardDTO">
		select *
		from suggest_board
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="suggest_write" parameterType="com.spring.dto.BoardDTO">
		insert into suggest_board(board_want_bno, com_regiNum, board_want_writer, suggest_writer, suggest_title, 
			board_want_destination, board_want_content, suggest_content, board_want_people, min_people,board_want_start, 
			board_want_end, suggest_price, suggest_guide, suggest_air)
					values(#{board_want_bno}, #{com_regiNum}, #{board_want_writer}, #{suggest_writer}, #{suggest_title}, 
					#{board_want_destination}, #{board_want_content}, #{suggest_content}, #{board_want_people}, #{min_people},
					#{board_want_start}, #{board_want_end},	#{suggest_price}, #{suggest_guide}, #{suggest_air})
	</insert>
	<!-- 이미지 삽입 -->
	<insert id="suggest_writeImage" parameterType="com.spring.dto.BoardDTO">
		insert into image_upload_board(classify_board, division_bno, img, thumbnail)
					values(2, #{division_bno}, #{img}, #{thumbnail})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="suggest_view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select *
		from suggest_board
		where suggest_bno = #{suggest_bno}		
	</select>
	<!-- 이미지 조회 -->
	<select id="suggest_viewImage" resultType="com.spring.dto.BoardDTO">
		SELECT iub.division_bno, iub.img, iub.thumbnail
		FROM suggest_board sb, image_upload_board iub
		WHERE sb.suggest_bno = #{suggest_bno} AND iub.division_bno = #{suggest_bno} AND iub.classify_board = 2
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="suggest_updateViewCnt" parameterType="int">
		update suggest_board
			set suggest_viewCnt = suggest_viewCnt + 1
		where suggest_bno = #{suggest_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="suggest_modify" parameterType="com.spring.dto.BoardDTO">
		update suggest_board
			set
				suggest_title = #{suggest_title},
				board_want_writer = #{board_want_writer},
				board_want_destination = #{board_want_destination},
				board_want_content = #{board_want_content},
				suggest_content = #{suggest_content},
				board_want_people = #{board_want_people},
				board_want_start = #{board_want_start},
				board_want_end = #{board_want_end},
				suggest_price = #{suggest_price},
				suggest_guide = #{suggest_guide},
				suggest_air = #{suggest_air}
			where suggest_bno = #{suggest_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="suggest_delete" parameterType="int">
		delete from suggest_board
		where suggest_bno = #{suggest_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="suggest_count" resultType="int">
		select count(suggest_bno) from suggest_board
	</select>
	
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="suggest_listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select suggest_bno, suggest_title, suggest_writer, suggest_viewCnt, suggest_like, suggest_regDate,
				iub.thumbnail as suggest_thumbnail
		from suggest_board, image_upload_board iub
		where suggest_bno = iub.division_bno AND classify_board = 2
		
		<if test='searchType.equals("title")'>
			AND suggest_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			AND suggest_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			AND suggest_title LIKE concat('%', #{keyword}, '%')
			or suggest_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			AND suggest_writer LIKE concat('%', #{keyword}, '%')
		</if>
		
		group by suggest_bno
		order by suggest_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="suggest_searchCount" parameterType="hashMap" resultType="int">
		select count(suggest_bno) from suggest_board  
	  
		<if test='searchType.equals("title")'>
		 	WHERE suggest_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE suggest_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE suggest_title LIKE concat('%', #{keyword}, '%') 
			 or suggest_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE suggest_writer LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
	<!-- 패키지 제안 게시판 end -->
	
	<!-- 패키지 판매 게시판 start -->
	<!-- 게시물 목록 -->
	<select id="sell_list" resultType="com.spring.dto.BoardDTO">
		select *
		from sell_board
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 땐 parameterType 사용 -->
	<insert id="sell_write" parameterType="com.spring.dto.BoardDTO">
		insert into sell_board(sell_bno, suggest_bno, board_want_bno, com_regiNum, sell_writer, sell_title, 
				sell_destination, sell_content, sell_start, sell_end, sell_people, min_people, sell_price, sell_guide, sell_air)
					values(#{sell_bno}, #{suggest_bno}, #{board_want_bno}, #{com_regiNum}, #{sell_writer}, #{sell_title}, 
					#{sell_destination}, #{sell_content}, #{sell_start}, #{sell_end}, #{sell_people}, #{min_people}, 
					#{sell_price}, #{sell_guide}, #{sell_air})
	</insert>
	<!-- 이미지 삽입 -->
	<insert id="sell_writeImage" parameterType="com.spring.dto.BoardDTO">
		insert into image_upload_board(classify_board, division_bno, img, thumbnail)
					values(3, #{division_bno}, #{sell_img}, #{sell_thumbnail})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="sell_view" parameterType="int" resultType="com.spring.dto.BoardDTO">
		select *
		from sell_board
		where sell_bno = #{sell_bno}		
	</select>
	<!-- 이미지 조회 -->
	<select id="sell_viewImage" resultType="com.spring.dto.BoardDTO">
		SELECT iub.division_bno, iub.img, iub.thumbnail
		FROM sell_board sb, image_upload_board iub
		WHERE sb.suggest_bno = #{suggest_bno} AND iub.division_bno = #{suggest_bno} AND iub.classify_board = 2
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="sell_updateViewCnt" parameterType="int">
		update sell_board
			set sell_viewCnt = sell_viewCnt + 1
		where sell_bno = #{sell_bno}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="sell_modify" parameterType="com.spring.dto.BoardDTO">
		update sell_board
			set
				sell_title = #{sell_title},
				sell_writer = #{sell_writer},
				sell_destination = #{sell_destination},
				sell_content = #{sell_content},
				sell_people = #{sell_people},
				sell_start = #{sell_start},
				sell_end = #{sell_end},
				sell_price = #{sell_price},
				sell_people = #{sell_people},
				sell_guide = #{sell_guide},
				sell_air = #{sell_air}
			where sell_bno = #{sell_bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="sell_delete" parameterType="int">
		delete from sell_board
		where sell_bno = #{sell_bno}
	</delete>
	
	<!-- 게시글 총 갯수 -->
	<select id="sell_count" resultType="int">
		select count(sell_bno) from sell_board
	</select>
	
	
	<!-- 게시글 목록 + 페이징 + 검색 -->
	<select id="sell_listPageSearch" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select sb.sell_bno, sb.suggest_bno, sgb.board_want_people, sb.sell_people, sb.sell_title, sb.sell_writer, sb.sell_viewCnt, 
		sb.sell_like, sb.sell_regDate, iub.thumbnail as sell_thumbnail
		from sell_board sb, suggest_board sgb, image_upload_board iub
		where sb.suggest_bno = sgb.suggest_bno AND iub.division_bno = sb.suggest_bno AND
		<if test='searchType.equals("title")'>
			sb.sell_title LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("content")'>
			sb.sell_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("title_content")'>
			sb.sell_title LIKE concat('%', #{keyword}, '%')
			or sb.sell_content LIKE concat('%', #{keyword}, '%')
		</if>
		
		<if test='searchType.equals("writer")'>
			sb.sell_writer LIKE concat('%', #{keyword}, '%')
		</if>
		group by sb.sell_bno
		order by sb.sell_bno desc
			limit #{displayPost}, #{postNum} 
	</select>
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="sell_searchCount" parameterType="hashMap" resultType="int">
		select count(sell_bno) from sell_board  
	  
		<if test='searchType.equals("title")'>
		 	WHERE sell_title LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			WHERE sell_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			WHERE sell_title LIKE concat('%', #{keyword}, '%') 
			 or sell_content LIKE concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			WHERE sell_writer LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
	<!-- 패키지 판매 게시판 end -->
	
	<!-- 주문 내역 start -->
	<!-- 구매 -->
	<insert id="purchase" parameterType="com.spring.dto.BoardDTO">
		insert into order_data(sell_bno, user_num, order_title, order_writer, order_destination, order_price, 
							order_people, order_guide, order_air, order_start, order_end)
		values(#{sell_bno}, #{user_num}, #{order_title}, #{order_writer}, #{order_destination}, #{order_price}, 
				#{order_people}, #{order_guide}, #{order_air}, #{order_start}, #{order_end})
	</insert>
	
	<!-- 구매 중복 확인 -->
	<select id="purchaseCheck" resultType="int">
		select count(*)
		from order_data
		where sell_bno = #{sell_bno} and user_num = #{user_num}
	</select>
	
	<!-- 패키지 판매 최초 인원수 확인 -->
	<select id="checkPeopleCount" resultType="int">
		select board_want_people
		from suggest_board
		where suggest_bno = #{suggest_bno}
	</select>
	
	<!-- 패키지 구매 시 인원수 감소-->
	<update id="updatePeople">
		update sell_board
			set
				sell_people = sell_people - #{order_people}
			where sell_bno = #{sell_bno}
	</update>
	<!-- 주문 내역 end -->
	
	<!-- 패키지 낙찰 확인 -->
	<select id="packageCheck" resultType="int">
		select count(*)
		from sell_board
		where board_want_bno = #{board_want_bno}
	</select>
	
	<!-- 고객 구매 확인 -->
	<select id="purchaseCheckCompany" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select *
		from order_data
		where order_writer = #{order_writer}
		order by order_date desc
	</select>
	
	<!-- 패키지 제안 입찰 목록 확인 -->
	<select id="SuggestCheckCompany" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select *
		from suggest_board
		where com_regiNum = #{com_regiNum}
		order by suggest_regDate desc
	</select>
	
	<!-- 패키지 판매 목록 확인 -->
	<select id="SellCheckCompany" parameterType="hashMap" resultType="com.spring.dto.BoardDTO">
		select *
		from sell_board
		where com_regiNum = #{com_regiNum}
		order by sell_regDate desc
	</select>
</mapper>